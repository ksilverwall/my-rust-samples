version: "3.9"

services:
  geth01:
    build: ./docker/images/ethereum
    networks:
      ethereum:
        ipv4_address: ${NODE01_IP:?}
    ports:
      - "8545:8545"
    volumes:
      - ./.tmp:/root/.tmp
      - ./docker/files/node01/:/root/files/
      - ./docker/files/shared/:/root/files/shared
    environment:
      GENESIS_FILE: ./files/shared/genesis.json
      DATA_DIR: .tmp/node01
    working_dir: /root
    command: [
      "--networkid", "${NETWORK_ID:?}",
      "--authrpc.port", "8551",

      "--http",
      "--http.api", "eth,personal",
      "--http.addr", "0.0.0.0",
      "--http.vhosts", "*",
      "--allow-insecure-unlock",

      "--nodekey", "./files/nodekey",
      "--keystore", "./files/keystore",
      # Miner unlocking
      "--unlock", "0x6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf",
      "--password", "./files/password_6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf.txt",
      # Mining (PoA)
      "--mine",
      "--miner.etherbase", "0x6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf",
      # Bootstrap Node Settings
      "--port", "${NODE01_PORT:?}",
      "-nat", "extip:${NODE01_IP:?}",
    ]

  #
  # Services
  #
  database:
    image: postgres
    networks:
      - server-local
      - network-1
    ports:
      - 5432:5432
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./docker/database/scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=mysecretpassword

  server:
    image: local-talk
    depends_on:
      - database
    ports:
      - 10080:10080
    networks:
      - network-1
      - server-local
    volumes:
      - ./build/contracts:/contracts
    environment:
      - ABI_FILE=/contracts/SocialMedia.abi
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - DB_HOST=database
    init: true
    command: "server"

  #
  # Commands
  #

  geth:
    profiles: [command]
    build: ./docker/images/ethereum
    networks:
      ethereum:
    volumes:
      - ./:/root
    working_dir: /root
    entrypoint: geth
    command: attach .tmp/node01/geth.ipc

  deploy-contract:
    profiles: [command]
    build: ./docker/images/deploy-contract
    networks:
      ethereum:
    volumes:
      - ./build/contracts/:/contracts/
      - ./docker/files/node01/:/password
      - .tmp/file:/output/file
    environment:
      ETH_URL: "http://${NODE01_IP:?}:8545"
    command: [
      "--account", "6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf",
      "--password", "/password/password_6ce0ba981dd9b3bc259bbd868be14f957dbe6dcf.txt",
      "--abi", "/contracts/SocialMedia.abi",
      "--bin", "/contracts/SocialMedia.bin",
      "--out", "/output/file/outfile.txt"
    ]

  client:
    profiles: [command]
    image: local-talk
    networks:
      - network-1
    depends_on:
      - server
    init: true
    environment:
      - RUST_BACKTRACE=full
      - HOST=server
      - PORT=10080
    command: "client"

  e2e-test:
    image: rust
    depends_on:
      - server
    networks:
      - network-1
    volumes:
      - ./tests:/app
    environment:
      - RUST_BACKTRACE=full
      - HOST=server
      - PORT=10080
    working_dir: /app
    command: cargo test

volumes:
  cargo-registry:
  cargo-target:
  db-store:
  user-local:

networks:
  ethereum:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
  network-1:
  server-local:
